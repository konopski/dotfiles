[color]
	ui = true
[color "branch"]
    current = yellow reverse
    local = yellow
    remote = green
[color "decorate"]
    remoteBranch = blue bold
[color "diff"]
    meta = yellow bold
    frag = magenta bold
    old = red bold 
    new = green bold
    context = yellow
[color "status"]
    added = yellow
    changed = green
    untracked = cyan    
[alias]
    co = checkout
    st = status
    sta = status
    stat = status
    statu = status
    #those who don't know history, are doomed to repeat it
    hist = log --pretty=format:'%Cred%h%Creset %C(bold blue)<%an>%Creset%C(yellow)%d%Creset %Cgreen(%cr)%Creset%n%w(80,8,8)%s' --graph
    histfull = log --pretty=format:'%Cred%h%Creset %C(bold blue)<%an>%Creset%C(yellow)%d%Creset %Cgreen(%cr)%Creset%n%w(80,8,8)%s%n' --graph --name-status
    llog = log --pretty=format:'%C(yellow)%h %Cred%ad %Cblue%an%Cgreen%d %Creset%s' --date=iso
    lg = log --graph --date=relative --pretty=tformat:'%Cred%h%Creset -%C(auto)%d%Creset %s %Cgreen(%an %ad)%Creset'
    changelog = log --pretty=format:'%Cgreen%d %Creset%s' --date=iso

    #wish i knew
    whois = "!sh -c 'git log -i -1 --pretty=\"format::%an <%ae>\n\" --author=\"$1\"' -"
    whatis = show -s --pretty='tformat::%h (%s, %ad)' --date=short
    howmany = "!sh -c 'git log -a --pretty=oneline | wc -l'"
    howmanybywhom = shortlog -sn

    #what's going on, I don't even
    anychanges = !sh -c 'git fetch' && git log --oneline HEAD..origin/$1
    anychangesonmaster = !sh -c 'git fetch' && git log --oneline HEAD..origin/master
    whoischanging = !sh -c 'git shortlog HEAD..origin/$0'
    whoischangingmaster = !sh -c 'git shortlog HEAD..origin/master'
   
    #tags
    showtags = show-ref --tags
    pushtags = push --tags
    tagwithdate = !sh -c 'git tag "$0"_$(date "+%y-%m-%d_%H-%M-%S")'

    #better versions
    difff = diff --color-words #just words

    #what do I have in my toolbox?
    alias = !git config --list | grep 'alias\\.' | sed 's/alias\\.\\([^=]*\\)=\\(.*\\)/\\1\\\t => \\2/' | sort

    #remember clearcase?
    unco = checkout HEAD --

    #Jira tickets (from: http://blogs.atlassian.com/2014/08/whats-new-git-2-1/)
    issues = "!f() { : git log ; echo 'Printing issue keys'; git log --oneline $@ | egrep -o [A-Z]+-[0-9]+ | sort | uniq; }; f"
    #version for git below 2.1
    #issues = !sh -c 'git log --oneline $@ | egrep -o [A-Z]+-[0-9]+ | sort | uniq' -

    # Gets the current branch name (not so useful in itself, but used in other aliases)
    branch-name = "!git rev-parse --abbrev-ref HEAD"
    # Pushes the current branch to the remote "origin" (or the remote passed as the parameter) and set it to track the upstream branch
    publish = "!sh -c 'git push -u ${1:-origin} $(git branch-name)' -"
    # Deletes the remote version of the current branch from the remote "origin" (or the remote passed as the parameter)
    unpublish = "!sh -c 'set -e; git push ${1:-origin} :$(git branch-name);git branch --unset-upstream $(git branch-name)' -"

    mavenclean = "!sh -c '[ -f pom.xml ] && mvn clean'"
    maveninstall = "!sh -c '[ -f pom.xml ] && mvn install -fae $MAVEN_OPTS'"
    maveninstallskiptests = "!sh -c '[ -f pom.xml ] && mvn install -fae -Dmaven.test.skip $MAVEN_OPTS'"
    mavencleaninstall = "!sh -c '[ -f pom.xml ] && mvn clean install -fae $MAVEN_OPTS'"
    mavencleaninstallskiptests = "!sh -c '[ -f pom.xml ] && mvn clean install -fae -Dmaven.test.skip $MAVEN_OPTS'"
    mavenversion = "!sh -c '[ -f pom.xml ] &&  mvn org.apache.maven.plugins:maven-help-plugin:LATEST:evaluate -Dexpression=project.version -q -DforceStdout'"

    msg = "!sh -c 'git rev-parse --abbrev-ref HEAD | awk -F / \"{ print $NF }\" | sed -e \"s+_+ +g\" -e \"s+-+ +2g\" '"
    cmg = "!bash -c ' if [ "$(git branch-name)" != "master" ]; then git commit -m \"$(git msg)\";  else echo \"---ERR: on master branch!\" ; fi '"
    lastmsg = "show -s --format='%s'"
    repcmg = "!sh -c 'git commit -m \"$(git lastmsg)\" '"
    
[help]
    autocorrect = 1 #fucking magic!
    
    #what branches you have on origin, with info on who is guilty and how long ago. Useful for gitflow and feature branches in general. Requires fetch up-front.
    showorigin = "!sh -c 'for branch in `git branch -r | grep -v HEAD`;do echo `git show -s --format=\"%Cred%ci %C(green)%h %C(yellow)%cr %C(magenta)%an %C(blue)\" $branch | head -n 1` \\\t$branch; done | sort -r'"

    #get remote branches
    trackallbranches = !sh -c "for branchname in `git branch -r `; do git branch --track $branchname; done"
    updateallbranches = !sh -c "for branchname in `git branch -r `; do git checkout $branchname ; git pull; done"


[user]
	name = Lukasz Konopski
    	email = konopski@gmail.com
[core]
	excludesfile = ~/.cvsignore
#	autocrlf = true
	autocrlf = input
	longpaths = true
[pull]
	ff = only
